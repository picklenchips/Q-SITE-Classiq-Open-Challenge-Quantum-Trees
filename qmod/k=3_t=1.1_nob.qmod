qfunc prepare_registers(work_register: qbit[], taylor_register: qnum) {
  inplace_prepare_amplitudes([0.7071, 0.7071], 0.01, work_register);
  inplace_prepare_amplitudes([
    0.5845,
    0.6131,
    0.4547,
    0.2753
  ], 0.01, taylor_register);
}

qfunc do_entangling(taylor_register: qnum, work_register: qbit[]) {
  control (taylor_register == 0) {
    unitary([
      [1.0, 0.0],
      [0.0, 1.0]
    ], work_register);
  }
  control (taylor_register == 1) {
    unitary([
      [0.0, 1.0],
      [(-1.0), 0.0]
    ], work_register);
  }
  control (taylor_register == 2) {
    unitary([
      [(-1.0), 0.0],
      [0.0, (-1.0)]
    ], work_register);
  }
  control (taylor_register == 3) {
    unitary([
      [0.0, (-1.0)],
      [1.0, 0.0]
    ], work_register);
  }
}

qfunc main(output work_register: qbit[], output taylor_register: qnum) {
  allocate(1.0, work_register);
  allocate(2.0, taylor_register);
  within {
    prepare_registers(work_register, taylor_register);
  } apply {
    do_entangling(taylor_register, work_register);
  }
}
